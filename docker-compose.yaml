networks:
  main:
    name: bts-keycloak
  v4:
    name: bts-v4
    external: true

services:
  database:
    container_name: bts-keycloak-db
    image: postgres:16
    networks:
      - main
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready -U keycloak' ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: on-failure

  keycloak:
    container_name: bts-keycloak
    image: backstage/keycloak
    build:
      context: .
      dockerfile: Dockerfile
    networks:
      - main
      - v4
    ports:
      - '8081:8080'
      - '9000:9000'
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL_HOST: database
      KC_DB_URL_PORT: 5432
      KC_DB_URL_DATABASE: keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak
    command:
      - start-dev
    healthcheck:
      test: [ 'CMD-SHELL', "[ $(curl -s -f http://localhost:9000/health | jq -r '.status') == 'UP']" ]
      interval: 30s
      timeout: 5s
      retries: 2
    depends_on:
      database:
        condition: service_healthy
    restart: on-failure
